generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model elo_rankings_doubles_current {
  id            Int       @id(map: "idx_16936_elorankingsdoublescurrent_pkey") @default(autoincrement())
  date          DateTime? @db.Date
  position      Int?
  points        Int?
  move          Int?
  level         Int?
  player_id     Int?
  opponent_id   Int?
  points_delta  Int?
  straight_sets Boolean?
  won           Boolean?
  player        player?   @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "elorankingsdoublescurrent_player_id_fkey")

  @@index([player_id], map: "idx_16936_elorankingsdoublescurrent_afe72417")
}

model elo_rankings_singles_current {
  id            Int       @id(map: "idx_16941_elorankingssinglescurrent_pkey") @default(autoincrement())
  date          DateTime? @db.Date
  position      Int?
  points        Int?
  move          Int?
  level         Int?
  player_id     Int?
  opponent_id   Int?
  points_delta  Int?
  straight_sets Boolean?
  won           Boolean?
  player        player?   @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "elorankingssinglescurrent_player_id_fkey")

  @@index([player_id], map: "idx_16941_elorankingssinglescurrent_afe72417")
}

model match {
  id                              Int         @id(map: "idx_16888_match_pkey") @default(autoincrement())
  tournament_id                   Int?
  player1_id                      Int?
  player2_id                      Int?
  comment                         String?
  is_completed                    Boolean?
  stage                           Int?
  start_date                      DateTime?   @db.Date
  winner_id                       Decimal?    @db.Decimal
  score                           String?
  player3_id                      Int?
  player4_id                      Int?
  player_match_player1_idToplayer player?     @relation("match_player1_idToplayer", fields: [player1_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "match_player1_id_fkey")
  player_match_player2_idToplayer player?     @relation("match_player2_idToplayer", fields: [player2_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "match_player2_id_fkey")
  player_match_player3_idToplayer player?     @relation("match_player3_idToplayer", fields: [player3_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "match_player3_id_fkey")
  player_match_player4_idToplayer player?     @relation("match_player4_idToplayer", fields: [player4_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "match_player4_id_fkey")
  tournament                      tournament? @relation(fields: [tournament_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "match_tournament_id_fkey")

  @@index([player1_id], map: "idx_16888_match_26d85d6c")
  @@index([tournament_id], map: "idx_16888_match_656a3fdb")
  @@index([player3_id], map: "idx_16888_match_6bbfd55d")
  @@index([player2_id], map: "idx_16888_match_863818d8")
  @@index([player4_id], map: "idx_16888_match_9c006b3a")
}

model player {
  id                             Int                            @id(map: "idx_16917_player_pkey") @default(autoincrement())
  first_name                     String?
  last_name                      String?
  date_of_birth                  DateTime?                      @db.Date
  city                           String?
  country                        String?
  email                          String?
  phone                          String?
  avatar                         String?
  level                          Int?
  age                            Int?
  gameplay_style                 String?
  forehand                       String?
  beckhand                       String?
  insta_link                     String?
  is_coach                       Boolean?
  in_tennis_from                 DateTime?                      @db.Date
  elo_rankings_doubles_current   elo_rankings_doubles_current[]
  elo_rankings_singles_current   elo_rankings_singles_current[]
  match_match_player1_idToplayer match[]                        @relation("match_player1_idToplayer")
  match_match_player2_idToplayer match[]                        @relation("match_player2_idToplayer")
  match_match_player3_idToplayer match[]                        @relation("match_player3_idToplayer")
  match_match_player4_idToplayer match[]                        @relation("match_player4_idToplayer")
  rankings_doubles_current       rankings_doubles_current[]
  rankings_doubles_race          rankings_doubles_race[]
  rankings_singles_current       rankings_singles_current[]
  rankings_singles_race          rankings_singles_race[]
  tournament_players             tournament_players[]
  tournament_points_doubles      tournament_points_doubles[]
  tournament_points_singles      tournament_points_singles[]
}

model rankings_doubles_current {
  id        Int       @id(map: "idx_16895_rankingsdoublescurrent_pkey") @default(autoincrement())
  date      DateTime? @db.Date
  position  Int?
  points    Int?
  move      Int?
  level     Int?
  player_id Int?
  player    player?   @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rankingsdoublescurrent_player_id_fkey")

  @@index([player_id], map: "idx_16895_rankingsdoublescurrent_afe72417")
}

model rankings_doubles_race {
  id        Int       @id(map: "idx_16900_rankingsdoublesrace_pkey") @default(autoincrement())
  date      DateTime? @db.Date
  position  Int?
  points    Int?
  move      Int?
  level     Int?
  player_id Int?
  player    player?   @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rankingsdoublesrace_player_id_fkey")

  @@index([player_id], map: "idx_16900_rankingsdoublesrace_afe72417")
}

model rankings_singles_current {
  id        Int       @id(map: "idx_16878_rankingssinglescurrent_pkey") @default(autoincrement())
  date      DateTime? @db.Date
  position  Int?
  points    Int?
  player_id Int?
  move      Int?
  level     Int?
  player    player?   @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rankingssinglescurrent_player_id_fkey")

  @@index([player_id], map: "idx_16878_rankingssinglescurrent_afe72417")
}

model rankings_singles_race {
  id        Int       @id(map: "idx_16883_rankingssinglesrace_pkey") @default(autoincrement())
  date      DateTime? @db.Date
  position  Int?
  points    Int?
  player_id Int?
  move      Int?
  level     Int?
  player    player?   @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "rankingssinglesrace_player_id_fkey")

  @@index([player_id], map: "idx_16883_rankingssinglesrace_afe72417")
}

model scoring_template {
  id                   Int  @id(map: "idx_16924_scoringtemplate_pkey") @default(autoincrement())
  finalist_points      Int?
  qf_points            Int?
  r16_points           Int?
  sf_points            Int?
  winner_points        Int?
  draw_type            Int?
  group_2nd_place      Int?
  group_3rd_place      Int?
  qual_points          Int?
  r32_points           Int?
  group_qual_2nd_place Int?
  group_qual_3rd_place Int?
  group_4th_place      Int?
  group_qual_4th_place Int?
  tournament_type      Int?
}

model tournament {
  id                        Int                         @id(map: "idx_16929_tournament_pkey") @default(autoincrement())
  name                      String?
  address                   String?
  start_date                DateTime?                   @db.Date
  is_finished               Boolean?
  surface                   Int?
  associated_tournament_id  Int?                        @unique(map: "idx_16929_sqlite_autoindex_tournament_1")
  draw_type                 Int?
  players_order             String?
  draw                      String?
  city                      String?
  tournament_type           Int?
  tournament                tournament?                 @relation("tournamentTotournament", fields: [associated_tournament_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tournament_associated_tournament_id_fkey")
  match                     match[]
  other_tournament          tournament?                 @relation("tournamentTotournament")
  tournament_players        tournament_players[]
  tournament_points_doubles tournament_points_doubles[]
  tournament_points_singles tournament_points_singles[]
}

model tournament_players {
  id            Int         @id(map: "idx_16849_tournament_players_pkey") @default(autoincrement())
  tournament_id Int?
  player_id     Int?
  player        player?     @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tournament_players_player_id_fkey")
  tournament    tournament? @relation(fields: [tournament_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tournament_players_tournament_id_fkey")

  @@unique([tournament_id, player_id], map: "idx_16849_sqlite_autoindex_tournament_players_1")
  @@index([tournament_id], map: "idx_16849_tournament_players_656a3fdb")
  @@index([player_id], map: "idx_16849_tournament_players_afe72417")
}

model tournament_points_doubles {
  id               Int         @id(map: "idx_16912_tournamentpointsdoubles_pkey") @default(autoincrement())
  date             DateTime?   @db.Date
  points           Int?
  defending_points Int?
  player_id        Int?
  tournament_id    Int?
  player           player?     @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tournamentpointsdoubles_player_id_fkey")
  tournament       tournament? @relation(fields: [tournament_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tournamentpointsdoubles_tournament_id_fkey")

  @@index([tournament_id], map: "idx_16912_tournamentpointsdoubles_656a3fdb")
  @@index([player_id], map: "idx_16912_tournamentpointsdoubles_afe72417")
}

model tournament_points_singles {
  id               Int         @id(map: "idx_16859_tournamentpointssingles_pkey") @default(autoincrement())
  date             DateTime?   @db.Date
  points           Int?
  defending_points Int?
  player_id        Int?
  tournament_id    Int?
  player           player?     @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tournamentpointssingles_player_id_fkey")
  tournament       tournament? @relation(fields: [tournament_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tournamentpointssingles_tournament_id_fkey")

  @@index([tournament_id], map: "idx_16859_tournamentpointssingles_656a3fdb")
  @@index([player_id], map: "idx_16859_tournamentpointssingles_afe72417")
}
