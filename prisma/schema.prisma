generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model match {
  id                              Int         @id @default(autoincrement())
  tournament_id                   Int?
  player1_id                      Int?
  player2_id                      Int?
  comment                         String?
  is_completed                    Boolean?
  stage                           Int?
  start_date                      DateTime?   @db.Date
  winner_id                       String?
  score                           String?
  player3_id                      Int?
  player4_id                      Int?
  youtube_link                    String?
  time                            DateTime?   @db.Timestamp(6)
  player_match_player1_idToplayer player?     @relation("match_player1_idToplayer", fields: [player1_id], references: [id], onUpdate: NoAction, map: "core_match_player1_id_fkey")
  player_match_player2_idToplayer player?     @relation("match_player2_idToplayer", fields: [player2_id], references: [id], onUpdate: NoAction, map: "core_match_player2_id_fkey")
  player_match_player3_idToplayer player?     @relation("match_player3_idToplayer", fields: [player3_id], references: [id], onUpdate: NoAction, map: "core_match_player3_id_fkey")
  player_match_player4_idToplayer player?     @relation("match_player4_idToplayer", fields: [player4_id], references: [id], onUpdate: NoAction, map: "core_match_player4_id_fkey")
  tournament                      tournament? @relation(fields: [tournament_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "core_match_tournament_id_fkey")
}

model player {
  id                             Int       @id @default(autoincrement())
  first_name                     String?
  last_name                      String?
  date_of_birth                  DateTime? @db.Date
  city                           String?
  country                        String?
  email                          String?
  phone                          String?
  avatar                         String?
  level                          Int?
  age                            Int?
  gameplay_style                 String?
  forehand                       String?
  beckhand                       String?
  insta_link                     String?
  is_coach                       Boolean?
  in_tennis_from                 DateTime? @db.Date
  job_description                String?
  technique                      Int       @default(0)
  tactics                        Int       @default(0)
  power                          Int?      @default(0)
  shakes                         Int       @default(0)
  serve                          Int       @default(0)
  behaviour                      Int       @default(0)
  height                         Int?
  premium                        Boolean?  @default(false)
  match_match_player1_idToplayer match[]   @relation("match_player1_idToplayer")
  match_match_player2_idToplayer match[]   @relation("match_player2_idToplayer")
  match_match_player3_idToplayer match[]   @relation("match_player3_idToplayer")
  match_match_player4_idToplayer match[]   @relation("match_player4_idToplayer")
}

model tournament {
  id                   Int       @id @default(autoincrement())
  name                 String?
  address              String?
  start_date           DateTime? @db.Date
  is_finished          Boolean?
  surface              Int?
  draw_type            Int?
  players_order        String?
  draw                 String?
  city                 String?
  tournament_type      Int?
  is_doubles           Boolean?
  status               Int?
  unregistered_players String?   @default("")
  match                match[]
}

model digest {
  id                    Int       @id @default(autoincrement())
  date                  DateTime? @db.Date
  markdown              String?
  title                 String?
  mentioned_players_ids Int[]
}

model player_elo_ranking {
  id          Int       @id @default(autoincrement())
  elo_points  Int?
  player_id   Int?      @unique
  expire_date DateTime? @db.Date
}

model elo_ranking_change {
  id                 Int       @id @default(autoincrement())
  player_id          Int?
  match_id           Int?
  change_date        DateTime? @db.Date
  current_elo_points Int?
  new_elo_points     Int?
}

model other_page {
  id       Int     @id @default(autoincrement())
  markdown String?
  slug     String? @unique
  title    String?
}
